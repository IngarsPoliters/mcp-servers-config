# MCP Servers Configuration Environment Variables
# Copy this file to .env and fill in your actual values
# Never commit the .env file with real credentials to version control

# ============================================================================
# CORE SYSTEM VARIABLES
# ============================================================================

# Project root directory for filesystem operations
# Default: current working directory
FS_ROOT=${PWD}

# Alternative filesystem roots (uncomment as needed)
# FS_ROOT=/home/user/projects
# FS_ROOT=/workspace

# ============================================================================
# GITHUB MCP SERVER
# ============================================================================

# GitHub Personal Access Token
# Required for: repository access, issues, PRs, etc.
# Create at: https://github.com/settings/tokens
# Scopes needed: repo, read:user, read:org (adjust based on your needs)
GITHUB_TOKEN=your_github_token_here

# GitHub API Base URL (usually not needed unless using GitHub Enterprise)
# GITHUB_API_URL=https://api.github.com

# GitHub Organization/Username (optional, for scoped access)
# GITHUB_OWNER=your_username_or_org

# Default repository (optional)
# GITHUB_REPO=your_default_repo

# ============================================================================
# NOTION MCP SERVER
# ============================================================================

# Notion Integration Token
# Required for: database access, page operations
# Create at: https://www.notion.so/my-integrations
NOTION_TOKEN=your_notion_integration_token_here

# Default Notion Database ID (optional)
# NOTION_DATABASE_ID=your_database_id_here

# ============================================================================
# POSTGRES MCP SERVER
# ============================================================================

# PostgreSQL Database Connection String
# Format: postgresql://username:password@host:port/database
POSTGRES_CONNECTION_STRING=postgresql://username:password@localhost:5432/dbname

# Alternative individual PostgreSQL settings
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_DATABASE=mydb
# POSTGRES_USERNAME=user
# POSTGRES_PASSWORD=password

# ============================================================================
# PUPPETEER MCP SERVER
# ============================================================================

# OpenAI API Key (for vision capabilities if using puppeteer-vision-mcp)
# OPENAI_API_KEY=your_openai_api_key_here

# Vision model to use (optional)
# VISION_MODEL=gpt-4-vision-preview

# API base URL (optional, for custom endpoints)
# API_BASE_URL=https://api.openai.com/v1

# Browser executable path (optional, auto-detected if not set)
# PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome

# Headless mode (true/false)
# PUPPETEER_HEADLESS=true

# ============================================================================
# ZAPIER MCP SERVER
# ============================================================================

# Zapier API Key
# Get from: https://zapier.com/app/developer/
ZAPIER_API_KEY=your_zapier_api_key_here

# ============================================================================
# DOCKER HUB MCP SERVER (Remote Example)
# ============================================================================

# Docker Hub credentials (if needed for private repos)
# DOCKER_HUB_USERNAME=your_dockerhub_username
# DOCKER_HUB_PASSWORD=your_dockerhub_password_or_token

# ============================================================================
# SLACK MCP SERVER
# ============================================================================

# Slack Bot Token
# SLACK_BOT_TOKEN=xoxb-your-slack-bot-token

# Slack App Token (for socket mode)
# SLACK_APP_TOKEN=xapp-your-slack-app-token

# ============================================================================
# GOOGLE DRIVE MCP SERVER
# ============================================================================

# Google Drive API credentials (JSON service account key path)
# GOOGLE_DRIVE_CREDENTIALS_PATH=/path/to/service-account-key.json

# Google Drive folder ID (optional, for scoped access)
# GOOGLE_DRIVE_FOLDER_ID=your_folder_id_here

# ============================================================================
# MEMORY BANK MCP SERVER
# ============================================================================

# Memory bank storage path
# MEMORY_BANK_STORAGE_PATH=./memory-bank-data

# Memory bank embedding model (optional)
# MEMORY_BANK_EMBEDDING_MODEL=text-embedding-ada-002

# ============================================================================
# SQLITE MCP SERVER
# ============================================================================

# SQLite database path
# SQLITE_DB_PATH=./database.sqlite

# ============================================================================
# WEATHER MCP SERVER
# ============================================================================

# OpenWeatherMap API Key
# OPENWEATHER_API_KEY=your_openweathermap_api_key_here

# ============================================================================
# ANTHROPIC/CLAUDE SPECIFIC
# ============================================================================

# Anthropic API Key (for Claude integrations)
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Debug mode (true/false)
DEBUG=false

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable MCP server logging
MCP_LOG_LEVEL=info

# ============================================================================
# SECURITY NOTES
# ============================================================================
# 
# 1. Never commit .env files with real credentials to version control
# 2. Add .env to your .gitignore file
# 3. Use environment-specific .env files (.env.development, .env.production)
# 4. Regularly rotate API keys and tokens
# 5. Use minimal required permissions for API tokens
# 6. Consider using a secrets management service for production
#
# ============================================================================
# COMMON MCP SERVER INSTALLATION COMMANDS
# ============================================================================
#
# Install common MCP servers globally:
# npm install -g @modelcontextprotocol/server-github
# npm install -g @modelcontextprotocol/server-filesystem  
# npm install -g @modelcontextprotocol/server-puppeteer
# npm install -g puppeteer-mcp-server
# npm install -g notion-mcp-server
# npm install -g postgres-mcp-server
#
# ============================================================================
# ============================================================================
# SOURCEGRAPH MCP SERVER
# ============================================================================

# Sourcegraph instance URL
SOURCEGRAPH_URL=https://sourcegraph.example.com

# Sourcegraph access token
SOURCEGRAPH_TOKEN=your_sourcegraph_token_here

# ============================================================================
# MISSING VARIABLES
# ============================================================================

BRAVE_API_KEY=your_brave_api_key_here
SLACK_USER_TOKEN=your_slack_user_token_here
DATABASE_URL=postgresql://user:password@host:port/database
MEMORY_BANK_PATH=./memory-bank.json

# === Coolify MCP ===
COOLIFY_BASE_URL=https://aironixlabs.com
COOLIFY_TOKEN=your_coolify_api_token_here